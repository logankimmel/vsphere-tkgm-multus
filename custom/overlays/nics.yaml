#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind":"ClusterClass"})
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: tkg-vsphere-default-v1.2.0-extended
spec:
  #@overlay/match missing_ok=True
  variables:
  #@overlay/append
  - name: secondNIC
    required: false
    schema:
      openAPIV3Schema:
        type: string
        description: "Name of the second network interface device"
  #@overlay/match expects=1
  patches:
  - name: secondNIC
    enabledIf: '{{ not (empty .secondNIC) }}'
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: VSphereMachineTemplate
          matchResources:
            machineDeploymentClass:
              names:
                - tkg-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/network/devices/-
            valueFrom:
              template: '{dhcp4: true, networkName: /vc01/network/{{ .secondNIC }} }'